
// code for manually parsing JSON data

import org.json.JSONArray;
import org.json.JSONObject;

// Assuming jsonString contains your JSON data for a dilemma
JSONObject jsonObject = new JSONObject(jsonString);

// Extracting question
String question = jsonObject.getString("question");

// Extracting answer possibilities
JSONArray answersArray = jsonObject.getJSONArray("answers");
List<String> answers = new ArrayList<>();
for (int i = 0; i < answersArray.length(); i++) {
    answers.add(answersArray.getString(i));
}

// Extracting response
String response = jsonObject.getString("response");

// Extracting image path
String imagePath = jsonObject.getString("imagePath");

// Extracting consequence
String consequence = jsonObject.getString("consequence");




 // code for consequence handling of correct and incorrect answers

 public class Dilemma {
     private String question;
     private Map<String, String> answerConsequences;
     // Other attributes and methods

     public void setAnswerConsequences(Map<String, String> answerConsequences) {
         this.answerConsequences = answerConsequences;
     }

     public String getConsequenceForAnswer(String answer) {
         return answerConsequences.get(answer);
     }
 }


 // And also...
// When player selects an answer
String selectedAnswer = ...; // Retrieve selected answer
String consequence = currentDilemma.getConsequenceForAnswer(selectedAnswer);

if (consequence != null) {
    // Handle consequence
    if (isCorrectAnswer(selectedAnswer)) {
        // Proceed to next level or game screen
        proceedToNextLevel();
    } else {
        // Display consequence message
        displayConsequence(consequence);
        // If applicable, load and display the next dilemma
        if (consequenceLeadsToNextDilemma(consequence)) {
            loadNextDilemma(consequence);
        }
    }
}

